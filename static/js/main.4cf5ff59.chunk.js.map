{"version":3,"sources":["components/App/Styled.js","styles/variables.js","components/Header/Styled.js","components/Button/Styled.js","components/Button/Button.js","components/Header/Header.js","components/Terminal/Styled.js","components/PS1/Styled.js","components/PS1/PS1.js","components/Terminal/Terminal.js","components/App/App.js","serviceWorker.js","styles/base.js","index.js"],"names":["Styled","styled","main","_templateObject","palette","typography","header","Styled_templateObject","button","Button_Styled_templateObject","props","secondary","Button","_ref","icon","react_default","a","createElement","Button_Styled_Styled","className","type","defaultProps","Header","Styled_Styled","Button_Button","index_es","faTimes","faWindowMinimize","faSquare","section","Terminal_Styled_templateObject","PS1_Styled_templateObject","PS1","_Component","_getPrototypeOf2","_this","Object","classCallCheck","this","_len","arguments","length","args","Array","_key","possibleConstructorReturn","getPrototypeOf","call","apply","concat","state","animationDone","setAnimationDone","setState","inherits","createClass","key","value","_this2","_this$props","command","node","commandClassnames","classNames","done","PS1_Styled_Styled","faCodeBranch","Typist_default","avgTypingDelay","cursor","element","onTypingDone","Component","Terminal","Terminal_Styled_Styled","PS1_PS1","Fragment","href","target","rel","App","Header_Header","Terminal_Terminal","Boolean","window","location","hostname","match","GlobalStyles","createGlobalStyle","base_templateObject","ReactDOM","render","App_App","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"gbAEO,IAAMA,EAASC,IAAOC,KAAVC,KCFNC,EAKJ,OAaIC,EAIP,OAJOA,EASL,+dCxBD,IAAML,EAASC,IAAOK,OAAVC,IAGRH,8aCJJ,IAAMJ,EAASC,IAAOO,OAAVC,IAEH,SAACC,GAAD,OAAYA,EAAMC,UAAqE,sDAAzD,wDACxB,SAACD,GAAD,OAAYA,EAAMC,UAAwB,UAAZ,YCDvCC,EAAS,SAAAC,GAAyB,IAAtBC,EAAsBD,EAAtBC,KAAMH,EAAgBE,EAAhBF,UAC7B,OACEI,EAAAC,EAAAC,cAACC,EAAD,CAAcC,UAAU,SAASC,KAAK,SAAST,UAAWA,GACvDG,IAgBPF,EAAOS,aAAe,CACpBV,WAAW,8BChBAW,EAAS,SAAAZ,GACpB,OACEK,EAAAC,EAAAC,cAACM,EAAD,KACER,EAAAC,EAAAC,cAACO,EAAD,CAAQV,KAAMC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAiBX,KAAMY,QACrCX,EAAAC,EAAAC,cAACO,EAAD,CAAQV,KAAMC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAiBX,KAAMa,MAAsBhB,WAAS,IACpEI,EAAAC,EAAAC,cAACO,EAAD,CAAQV,KAAMC,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAiBX,KAAMc,MAAcjB,WAAS,IAH9D,kbCPG,IAAMX,EAASC,IAAO4B,QAAVC,IAKN1B,EASEA,EAGaA,w2BCjBrB,IAAMJ,EAASC,IAAO4B,QAAVE,IAuCN3B,qCClCA4B,EAAb,SAAAC,GAAA,SAAAD,IAAA,IAAAE,EAAAC,EAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,GAAA,QAAAO,EAAAC,UAAAC,OAAAC,EAAA,IAAAC,MAAAJ,GAAAK,EAAA,EAAAA,EAAAL,EAAAK,IAAAF,EAAAE,GAAAJ,UAAAI,GAAA,OAAAT,EAAAC,OAAAS,EAAA,EAAAT,CAAAE,MAAAJ,EAAAE,OAAAU,EAAA,EAAAV,CAAAJ,IAAAe,KAAAC,MAAAd,EAAA,CAAAI,MAAAW,OAAAP,MACEQ,MAAQ,CACNC,eAAe,GAFnBhB,EAKEiB,iBAAmB,SAAAD,GAAa,OAAIhB,EAAKkB,SAAS,CAAEF,mBALtDhB,EAAA,OAAAC,OAAAkB,EAAA,EAAAlB,CAAAJ,EAAAC,GAAAG,OAAAmB,EAAA,EAAAnB,CAAAJ,EAAA,EAAAwB,IAAA,SAAAC,MAAA,WAOW,IAAAC,EAAApB,KACCa,EAAkBb,KAAKY,MAAvBC,cADDQ,EAEmBrB,KAAK5B,MAAvBkD,EAFDD,EAECC,QAASC,EAFVF,EAEUE,KAEXC,EAAoBC,IAAW,UAAW,CAC9CC,KAAMb,IAGR,OACEpC,EAAAC,EAAAC,cAACgD,EAAD,CAAed,cAAeA,GAC5BpC,EAAAC,EAAAC,cAAA,OAAKE,UAAU,OAAf,8BACAJ,EAAAC,EAAAC,cAAA,OAAKE,UAAU,UACbJ,EAAAC,EAAAC,cAACQ,EAAA,EAAD,CAAiBX,KAAMoD,MADzB,WAGAnD,EAAAC,EAAAC,cAAA,OAAKE,UAAW2C,GACd/C,EAAAC,EAAAC,cAACkD,EAAAnD,EAAD,CACAoD,eAAgB,IACdC,OAAQ,CAAEC,QAAS,WACnBC,aAAc,kBAAMb,EAAKN,kBAAiB,KAEzCQ,IAGJT,GAAiBpC,EAAAC,EAAAC,cAAA,WAAM4C,QA9BhC7B,EAAA,CAAyBwC,aA+CzBxC,EAAIX,aAAe,CACjBwC,KAAM,MCnDD,IAAMY,EAAW,SAAA/D,GACtB,OACEK,EAAAC,EAAAC,cAACyD,EAAD,KACE3D,EAAAC,EAAAC,cAAC0D,EAAD,CACEf,QAAQ,wBACRC,KACE9C,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4D,SAAA,KACE7D,EAAAC,EAAAC,cAAA,2IAIAF,EAAAC,EAAAC,cAAA,wJAKAF,EAAAC,EAAAC,cAAA,oIAIAF,EAAAC,EAAAC,cAAC0D,EAAD,CACEf,QAAQ,qBACRC,KACE9C,EAAAC,EAAAC,cAAA,MAAIE,UAAU,oBACZJ,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACE4D,KAAK,yDACLC,OAAO,SACPC,IAAI,uBAHN,cAQFhE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACE4D,KAAK,8BACLC,OAAO,SACPC,IAAI,uBAHN,YAQFhE,EAAAC,EAAAC,cAAA,UACEF,EAAAC,EAAAC,cAAA,KACE4D,KAAK,4BACLC,OAAO,SACPC,IAAI,uBAHN,mBC3CPC,EAAb,SAAA/C,GAAA,SAAA+C,IAAA,OAAA5C,OAAAC,EAAA,EAAAD,CAAAE,KAAA0C,GAAA5C,OAAAS,EAAA,EAAAT,CAAAE,KAAAF,OAAAU,EAAA,EAAAV,CAAA4C,GAAAhC,MAAAV,KAAAE,YAAA,OAAAJ,OAAAkB,EAAA,EAAAlB,CAAA4C,EAAA/C,GAAAG,OAAAmB,EAAA,EAAAnB,CAAA4C,EAAA,EAAAxB,IAAA,SAAAC,MAAA,WAEI,OACE1C,EAAAC,EAAAC,cAACjB,EAAD,CAAYmB,UAAU,OACpBJ,EAAAC,EAAAC,cAACgE,EAAD,MACAlE,EAAAC,EAAAC,cAACiE,EAAD,WALRF,EAAA,CAAyBR,aCOLW,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,0dCfC,IAAMC,EAAeC,YAAHC,IAcRrF,EACEA,GCXnBsF,IAASC,OACP7E,EAAAC,EAAAC,cAAAF,EAAAC,EAAA4D,SAAA,KACE7D,EAAAC,EAAAC,cAACuE,EAAD,MACAzE,EAAAC,EAAAC,cAAC4E,EAAD,OAEFC,SAASC,eAAe,SFqHpB,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,KAAK,SAAAC,GACjCA,EAAaC","file":"static/js/main.4cf5ff59.chunk.js","sourcesContent":["import styled from 'styled-components';\r\n\r\nexport const Styled = styled.main`\r\n  display: flex;\r\n  height: 100vh;\r\n  flex-direction: column;\r\n\r\n  header {\r\n    flex-shrink: 1;\r\n  }\r\n\r\n  section {\r\n    flex-grow: 1;\r\n  }\r\n`;\r\n","export const palette = {\r\n  // website\r\n  primary: \"#3498db\",\r\n  secondary: \"#2980ba\",\r\n  black: \"#191b1d\",\r\n  white: \"#fff\",\r\n  // social media\r\n  fb: \"#3b5998\",\r\n  github: \"#333\",\r\n  linkedIn: \"#007bb5\"\r\n};\r\n\r\nexport const device = {\r\n  tablet: \"767px\",\r\n  desktop: \"991px\",\r\n  largeDesktop: \"1199px\"\r\n};\r\n\r\nexport const typography = {\r\n  xl: \"48px\",\r\n  lg: \"32px\",\r\n  md: \"18px\",\r\n  sm: \"14px\",\r\n  xs: \"11px\",\r\n  lhXl: \"54px\",\r\n  lhLg: \"38px\",\r\n  lhMd: \"24px\",\r\n  lhSm: \"20px\",\r\n  lhXs: \"17px\"\r\n};\r\n","import styled from 'styled-components';\r\nimport { palette } from '../../styles/variables';\r\n\r\nexport const Styled = styled.header`\r\n  background: linear-gradient(to bottom, #52504b 0%, #3d3c38 100%);\r\n  border-top: 1px solid #5c5b53;\r\n  color: ${palette.white};\r\n  display: flex;\r\n  height: 26px;\r\n  width: 100%;\r\n  padding: 0 10px;\r\n  font-size: 12px;\r\n  font-weight: bold;\r\n  letter-spacing: 1px;\r\n  align-items: center;\r\n  user-select: none;\r\n\r\n  .Button {\r\n    margin-right: 3px;\r\n\r\n    &:last-child {\r\n      margin-right: 15px;\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\n\r\nexport const Styled = styled.button`\r\n  background-color: transparent;\r\n  background: ${(props) => !props.secondary ? 'linear-gradient(to bottom, #ef8161 0%, #e64918 100%)' : 'linear-gradient(to bottom, #8a8a84 0%,#5e5954 100%)'};\r\n  border: 1px solid ${(props) => !props.secondary ? '#82422E' : '#4B4944'};\r\n  border-radius: 50%;\r\n  cursor: pointer;\r\n  width: 16px;\r\n  height: 16px;\r\n  outline: 0 !important;\r\n  position: relative;\r\n\r\n  svg {\r\n    font-size: 10px;\r\n    position: absolute;\r\n    top: 50%;\r\n    left: 50%;\r\n    transform: translate(-50%, -50%);\r\n    opacity: .5;\r\n  }\r\n`;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Styled as StyledButton } from './Styled';\r\n\r\nexport const Button = ({ icon, secondary }) => {\r\n  return (\r\n    <StyledButton className=\"Button\" type=\"button\" secondary={secondary}>\r\n      {icon}\r\n    </StyledButton>\r\n  );\r\n};\r\n\r\nButton.propTypes = {\r\n  /**\r\n   * FontAwesome icon\r\n   */\r\n  icon: PropTypes.node.isRequired,\r\n  /**\r\n   * Stylistic variation\r\n   */\r\n  secondary: PropTypes.bool,\r\n};\r\n\r\nButton.defaultProps = {\r\n  secondary: false,\r\n};\r\n","import React from 'react';\r\nimport { Styled as StyledHeader } from './Styled';\r\nimport { Button } from '../Button';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faTimes } from '@fortawesome/free-solid-svg-icons';\r\nimport { faSquare } from '@fortawesome/free-regular-svg-icons';\r\nimport { faWindowMinimize } from '@fortawesome/free-regular-svg-icons';\r\n\r\nexport const Header = props => {\r\n  return (\r\n    <StyledHeader>\r\n      <Button icon={<FontAwesomeIcon icon={faTimes} />} />\r\n      <Button icon={<FontAwesomeIcon icon={faWindowMinimize} />} secondary />\r\n      <Button icon={<FontAwesomeIcon icon={faSquare} />} secondary />\r\n      root@home-pc: ~/workspace/yiotis-website\r\n    </StyledHeader>\r\n  );\r\n};\r\n","import styled from 'styled-components';\r\nimport { palette } from '../../styles/variables';\r\n\r\nexport const Styled = styled.section`\r\n  background-color: #0a2833;\r\n  padding-top: 10px;\r\n\r\n  p {\r\n    color: ${palette.white};\r\n    padding-left: 5px;\r\n  }\r\n\r\n  ul {\r\n    list-style: none;\r\n    padding: 0 0 0 10px;\r\n\r\n    a {\r\n      color: ${palette.white};\r\n\r\n      &:hover {\r\n        background-color: ${palette.white};\r\n        color: #0a2833;\r\n        padding: 0 3px;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import styled from 'styled-components';\r\nimport { palette } from '../../styles/variables';\r\n\r\nexport const Styled = styled.section`\r\n  .dir {\r\n    background-color: #2c85bf;\r\n    color: #143841;\r\n    padding: 0 10px;\r\n    z-index: 1;\r\n    &:after {\r\n      background-color: #2c85bf;\r\n    }\r\n  }\r\n\r\n  .branch {\r\n    background-color: #7f9818;\r\n    color: #143841;\r\n    padding: 0 10px 0 20px;\r\n    &:after {\r\n      background-color: #7f9818;\r\n    }\r\n  }\r\n\r\n  .dir,\r\n  .branch {\r\n    display: inline-block;\r\n    position: relative;\r\n    user-select: none;\r\n\r\n    &:after {\r\n      content: '';\r\n      display: block;\r\n      position: absolute;\r\n      top: 3.5px;\r\n      right: -7px;\r\n      height: 14px;\r\n      width: 14px;\r\n      transform: rotate(45deg);\r\n    }\r\n  }\r\n\r\n  .command {\r\n    color: ${palette.white};\r\n    display: inline-block;\r\n    padding-left: 20px;\r\n\r\n    &.done {\r\n      .Cursor {\r\n        display: none;\r\n      }\r\n    }\r\n  }\r\n`;\r\n","import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Styled as StyledSection } from './Styled';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faCodeBranch } from '@fortawesome/free-solid-svg-icons';\r\nimport Typist from 'react-typist';\r\nimport classNames from 'classnames';\r\n\r\nexport class PS1 extends Component {\r\n  state = {\r\n    animationDone: false,\r\n  };\r\n\r\n  setAnimationDone = animationDone => this.setState({ animationDone });\r\n\r\n  render() {\r\n    const { animationDone } = this.state;\r\n    const { command, node } = this.props;\r\n\r\n    const commandClassnames = classNames('command', {\r\n      done: animationDone,\r\n    })\r\n\r\n    return (\r\n      <StyledSection animationDone={animationDone}>\r\n        <div className=\"dir\">~/workspace/yiotis-website</div>\r\n        <div className=\"branch\">\r\n          <FontAwesomeIcon icon={faCodeBranch} /> master\r\n        </div>\r\n        <div className={commandClassnames}>\r\n          <Typist\r\n          avgTypingDelay={100}\r\n            cursor={{ element: ' █' }}\r\n            onTypingDone={() => this.setAnimationDone(true)}\r\n          >\r\n            {command}\r\n          </Typist>\r\n        </div>\r\n        {animationDone && <div>{node}</div>}\r\n      </StyledSection>\r\n    );\r\n  }\r\n}\r\n\r\nPS1.propTypes = {\r\n  /**\r\n   * Command to be typed using react-typist\r\n   */\r\n  command: PropTypes.string.isRequired,\r\n  /**\r\n   * Node to render after the animation is finished\r\n   */\r\n  node: PropTypes.node,\r\n};\r\n\r\nPS1.defaultProps = {\r\n  node: null,\r\n};\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Styled as StyledSection } from './Styled';\r\nimport { PS1 } from '../PS1';\r\n\r\nexport const Terminal = props => {\r\n  return (\r\n    <StyledSection>\r\n      <PS1\r\n        command=\"echo $WELCOME_MESSAGE\"\r\n        node={\r\n          <>\r\n            <p>\r\n              Welcome to my personal website, my name is Yiotis Kaltsikis. I am\r\n              a software developer, living and working in Berlin, Germany.\r\n            </p>\r\n            <p>\r\n              Over the last years, I have developed a multitude of web\r\n              applications, working for startups and large corporations, mainly\r\n              with JavaScript.\r\n            </p>\r\n            <p>\r\n              My stack revolves around the JavaScript ecosystem, including\r\n              React, Redux, Node, Meteor, Express, MongoDB, AWS, Docker.\r\n            </p>\r\n            <PS1\r\n              command=\"cd ./get-in-touch/\"\r\n              node={\r\n                <ul className=\"social-media-nav\">\r\n                  <li>\r\n                    <a\r\n                      href=\"https://www.linkedin.com/in/yiotis-kaltsikis-846013b7/\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      linkedin/\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"https://github.com/giotiskl\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      github/\r\n                    </a>\r\n                  </li>\r\n                  <li>\r\n                    <a\r\n                      href=\"mailto:giotisgr@gmail.com\"\r\n                      target=\"_blank\"\r\n                      rel=\"noopener noreferrer\"\r\n                    >\r\n                      email/\r\n                    </a>\r\n                  </li>\r\n                </ul>\r\n              }\r\n            />\r\n          </>\r\n        }\r\n      />\r\n    </StyledSection>\r\n  );\r\n};\r\n\r\nTerminal.propTypes = {};\r\n","import React, { Component } from 'react';\r\nimport { Styled as StyledMain } from './Styled';\r\nimport { Header } from '../Header';\r\nimport { Terminal } from '../Terminal';\r\n\r\nexport class App extends Component {\r\n  render() {\r\n    return (\r\n      <StyledMain className=\"App\">\r\n        <Header />\r\n        <Terminal />\r\n      </StyledMain>\r\n    );\r\n  }\r\n}\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read http://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import { createGlobalStyle } from \"styled-components\";\r\nimport { palette, typography } from './variables';\r\n\r\nexport const GlobalStyles = createGlobalStyle`\r\n  *,\r\n  html {\r\n    box-sizing: border-box;\r\n  }\r\n\r\n  body {\r\n    margin: 0;\r\n    padding: 0;\r\n    font-family: \"Roboto\", \"Helvetica Neue\", sans-serif;\r\n    -webkit-font-smoothing: antialiased;\r\n    -moz-osx-font-smoothing: grayscale;\r\n    text-rendering: optimizeLegibility;\r\n    // copy text\r\n    font-size: ${typography.sm};\r\n    line-height: ${typography.lhSm};\r\n  }\r\n`;\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport { App } from \"./components/App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport { GlobalStyles } from \"./styles/base\";\r\n\r\nReactDOM.render(\r\n  <>\r\n    <GlobalStyles />\r\n    <App />\r\n  </>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: http://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}